---
description: 
globs: 
alwaysApply: true
---
## Project Status: Esthell Menu App

**Objective**: Develop a progressive web application for Esthell Hotel guests to browse the menu, place orders, and track them in real-time.

**Current Phase**: Dish Modal (Step 4)

**Completed Steps**:
- **Step 0: Project Bootstrap**
    - 0.1: Initialized Next.js project (now at workspace root) with TypeScript, Tailwind CSS, ESLint.
    - 0.2: Added core dependencies: `@tanstack/react-query`, `framer-motion`, `lucide-react`, `shadcn-ui`.
    - 0.3: Set up `shadcn-ui` (manually configured `components.json`, `tailwind.config.ts`, and `globals.css` due to pnpm environment issues). Dependencies (`class-variance-authority`, `clsx`, `tailwind-merge`, `tailwindcss-animate`) installed.
    - 0.4: Absolute imports (`@/*`) configured in `tsconfig.json`.
- **Step 1: Core Layout**
    - 1.1: Created `app/(hotel)/layout.tsx` with `<QueryProvider>` & `<CartProvider>`.
    - 1.2: Added `<Header>` component (`components/layout/header.tsx`) with logo placeholder and dynamic `roomId` from `searchParams.r` (using `useSearchParams` and `<Suspense>`).
    - 1.3: Defined global Tailwind theme colors in `tailwind.config.ts`: `brand-primary` (#003C71), `brand-accent` (#FFD34E), and their foregrounds. Header styled with these colors.
- **Step 2: Home page (`app/(hotel)/page.tsx`)**
    - 2.1: Full-screen hero div with background gradient.
    - 2.2: Two `<Button>` components side-by-side: "Menu" → `/menu`, "Room Service" (disabled).
    - 2.3: Animated buttons with Framer's `whileHover` scale.
- **Step 3: Menu flow (`app/(hotel)/menu/page.tsx`)**
    - 3.1: Fetched menu via React-Query from `/menu.dummy.json`.
    - 3.2: Rendered horizontal category tabs (`<ScrollArea>`) with auto-scroll on click.
    - 3.3: Implemented `<DishCard>` and displayed dishes in a responsive grid.
- **Step 4: Dish modal (`components/menu/dish-sheet.tsx`)**
    - 4.1: Created `<DishSheet>` using shadcn `<Sheet>` (position="bottom"), triggered from `<DishCard>`. Centralized menu types in `types/menu.ts`.
    - 4.2: Implemented `DishSheet` content: image carousel (Framer Motion `drag="x"`), description, cook-time chip (`components/ui/chip.tsx`), notes textarea (`components/ui/textarea.tsx`), and "Add to Cart" button. Added `public/images/placeholder-dish.jpg`.

**Codebase Structure** (All paths relative to workspace root `/Users/aakashchid/workshop/esthell-menu`):
- Next.js 15 (App Router)
- TypeScript
- Tailwind CSS v4
- `shadcn-ui` for UI components (style: "new-york", base color: "neutral")
- Key directories:
    - `app/`: Main application code.
        - `app/(hotel)/layout.tsx`: Core layout for hotel-specific pages.
        - `app/(hotel)/page.tsx`: Home page.
        - `app/(hotel)/menu/page.tsx`: Menu page.
    - `components/`: Reusable UI components.
        - `components/layout/header.tsx`: Application header.
        - `components/providers/`: Context providers (`QueryProvider`, `CartProvider`).
        - `components/ui/`: Shadcn-ui components (Button, ScrollArea, Sheet, Textarea, Chip).
        - `components/menu/dish-card.tsx`: Displays individual dish information.
        - `components/menu/dish-sheet.tsx`: Bottom sheet modal for dish details.
    - `lib/`: Utility functions (alias: `@/lib`).
        - `lib/utils.ts`: Contains `cn()` utility from shadcn.
    - `public/`: Static assets.
        - `public/menu.dummy.json`: Dummy menu data.
        - `public/images/placeholder-dish.jpg`: Placeholder image for dishes.
    - `types/`: TypeScript type definitions.
        - `types/menu.ts`: Contains `Dish`, `Category`, `MenuData` interfaces.
- `pnpm` is the package manager (accessed via `npx pnpm` in the current environment).

**Upcoming Tasks**:
- **Step 5: Cart & checkout**
    - 5.1: `<CartDrawer>` toggled from navbar icon (badge with item count).
    - 5.2: Map items, allow qty adjust & remove.
    - 5.3: ConfirmOrder button → POST `/api/mock-order` (local route handler).
    - 5.4: On success push to `/orders/:id`.

**Key Files & Configuration** (All paths relative to workspace root):
- `package.json`: Project dependencies.
- `tsconfig.json`: TypeScript configuration, including path aliases.
- `tailwind.config.ts`: Tailwind CSS configuration (includes `tailwindcss-animate`).
- `app/globals.css`: Global styles and shadcn CSS variables.
- `components.json`: Shadcn UI configuration.
- `app/(hotel)/layout.tsx`: Wraps content with providers and includes the `Header`.
- `components/layout/header.tsx`: Displays logo and room ID.

**Visual/UX Notes (as per roadmap)**:
- Home: Full-bleed hero, logo, room #, glass-morphism buttons.
- Menu: Sticky category tabs, dish cards (image, name, price, cook-time, +/- controls).
- Item Modal: Bottom sheet, image carousel, details, notes, add-to-cart.
- Cart: Slide-in panel, item list, subtotal, confirm CTA.
- Order Tracker: Stepper (Placed → Cooking → On the way → Delivered) with SSE updates.

**Potential Issues/Notes**:
- `pnpm` is not globally available in the execution environment. Commands requiring `pnpm` need to be prefixed with `npx`.
- `shadcn-cli` commands may fail if they try to run `pnpm` automatically; manual component creation/dependency installation might be needed.
